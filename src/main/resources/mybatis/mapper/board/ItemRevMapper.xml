<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="com.ezen.grrreung.domain.board.mapper.ItemRevMapper">
	<!--게시글등록-->
	<insert id="create" parameterType="ItemRev">
		INSERT INTO item_rev(
			item_id,
		    rev_title,
			rev_cont,
			member_id,
			image_path
		) VALUES (
					 #{itemId},
					 #{revTitle},
					 #{revCont},
					 #{memberId},
		          	 #{imagePath}
				 )
	</insert>

	<!-- 전체리스트 및 검색 리스트-->
	<select id="postList" parameterType="RequestParams" resultType="ItemRev">
		SELECT
		rev_code,
		rev_title,
		rev_cont,
		member_id,
		DATE_FORMAT(rev_date, '%Y-%m-%d %H:%i:%s') as rev_date,
		item_id
		FROM
		item_rev
		<where>
			<if test="search != null">
				AND (rev_title LIKE CONCAT('%', #{search}, '%') OR item_id LIKE CONCAT('%', #{search}, '%') OR member_id LIKE CONCAT('%', #{search}, '%'))
			</if>
		</where>
		ORDER BY rev_code DESC
		LIMIT #{elementSize} OFFSET #{offset}
	</select>

	<!--전체리스트 행갯수-->
	<select id="postListCount" parameterType="RequestParams" resultType="int">
		SELECT COUNT(*) count
		FROM item_rev
		<where>
			<if test="search != null">
				AND (rev_title LIKE CONCAT('%', #{search}, '%') OR item_id LIKE CONCAT('%', #{search}, '%') OR member_id LIKE CONCAT('%', #{search}, '%'))
			</if>
		</where>
		order by rev_code DESC
	</select>

<!--	상세보기-->
	<select id="findByBno" parameterType="int" resultType="ItemRev">
		SELECT rev_code,
			   rev_title,
			   rev_cont,
			   member_id,
			   DATE_FORMAT(rev_date, '%Y-%m-%d %H:%i:%s') as rev_date,
			   image_path
		FROM item_rev
		WHERE rev_code = #{revCode}
	</select>

    <!-- 게시글 수정 -->
    <update id="updateByBno" parameterType="ItemRev">
        UPDATE item_rev
        SET rev_title = #{revTitle},
            rev_cont = #{revCont}
        WHERE rev_code = #{revCode}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost" parameterType="int">
        DELETE FROM item_rev
        WHERE rev_code = #{revCode}
    </delete>

<!--	상품명으로 상품코드 가져오기-->
	<select id="getItemId" parameterType="string" resultType="int">
		SELECT
			item_id
		FROM
			item
		WHERE
			item_name = #{itemName}
	</select>

<!--	구매 수량 조회하기-->
	<select id="numberOfPurchases" parameterType="map" resultType="int">
		SELECT
			oi.order_amount
		FROM
			order_gr og
				JOIN member     m ON og.member_id = m.member_id
				JOIN order_item oi ON og.order_id = oi.order_id
		WHERE
			og.member_id = #{memberId, jdbcType=VARCHAR}
		  AND og.order_id = #{orderId, jdbcType=INTEGER}
		  AND oi.order_item_id = #{itemId, jdbcType=INTEGER}

	</select>

<!--	아이템 별 작성된 후기 갯수-->
	<select id="writtenPost" parameterType="map" resultType="int">
		SELECT
			COUNT(*) cnt
		FROM
			item_rev
		WHERE
			item_id = #{itemId}
		  AND
			member_id =#{memberId}
	</select>

	<!-- 아이템 상세페이지 리뷰목록 조회 - 아이템id -->
	<select id="itemRevList" parameterType="RequestParams" resultType="ItemRev">
		SELECT
		rev_code,
		rev_title,
		rev_cont,
		member_id,
		DATE_FORMAT(rev_date, '%Y-%m-%d %H:%i:%s') as rev_date,
		item_id
		FROM
		item_rev
		WHERE item_id= #{search}
		ORDER BY rev_code DESC
		LIMIT #{elementSize} OFFSET #{offset}
	</select>

	<!-- 아이템별 (전체 회원) 리뷰 개수 조회 -->
	<select id="itemRevPostCount" parameterType="int" resultType="int">
		SELECT
			COUNT(*) cnt
		FROM
			item_rev
		WHERE
			item_id = #{itemId}
	</select>

	<!-- 아이템 상세보기 페이지에서 보여줄 리뷰목록 조회 -->
	<select id="itemReviewAll" parameterType="int" resultType="map">
		SELECT
			rev_code, rev_title, rev_cont,
			DATE_FORMAT(rev_date, '%Y-%m-%d %H:%i:%s') as rev_date,
			member_id,
			item_id,
			image_path
		FROM
			item_rev
		WHERE
			item_id = #{itemId}
		ORDER BY
		    rev_code DESC
	</select>

</mapper>

